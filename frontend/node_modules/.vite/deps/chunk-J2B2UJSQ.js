import {
  SUPPORTS_INTERSECTION
} from "./chunk-2YYCYEJ5.js";
import {
  onBeforeUnmount,
  ref,
  shallowRef,
  watch
} from "./chunk-TEXZTZV4.js";

// node_modules/.pnpm/vuetify@3.7.11_typescript@5_e961b96907cdebac0a9c1a63ade025c9/node_modules/vuetify/lib/composables/intersectionObserver.mjs
function useIntersectionObserver(callback, options) {
  const intersectionRef = ref();
  const isIntersecting = shallowRef(false);
  if (SUPPORTS_INTERSECTION) {
    const observer = new IntersectionObserver((entries) => {
      callback == null ? void 0 : callback(entries, observer);
      isIntersecting.value = !!entries.find((entry) => entry.isIntersecting);
    }, options);
    onBeforeUnmount(() => {
      observer.disconnect();
    });
    watch(intersectionRef, (newValue, oldValue) => {
      if (oldValue) {
        observer.unobserve(oldValue);
        isIntersecting.value = false;
      }
      if (newValue) observer.observe(newValue);
    }, {
      flush: "post"
    });
  }
  return {
    intersectionRef,
    isIntersecting
  };
}

export {
  useIntersectionObserver
};
//# sourceMappingURL=chunk-J2B2UJSQ.js.map
