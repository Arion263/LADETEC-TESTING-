import {
  convertToUnit,
  destructComputed,
  getCurrentInstanceName,
  includes,
  propsFactory
} from "./chunk-2YYCYEJ5.js";

// node_modules/.pnpm/vuetify@3.7.11_typescript@5_e961b96907cdebac0a9c1a63ade025c9/node_modules/vuetify/lib/composables/size.mjs
var predefinedSizes = ["x-small", "small", "default", "large", "x-large"];
var makeSizeProps = propsFactory({
  size: {
    type: [String, Number],
    default: "default"
  }
}, "size");
function useSize(props) {
  let name = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : getCurrentInstanceName();
  return destructComputed(() => {
    let sizeClasses;
    let sizeStyles;
    if (includes(predefinedSizes, props.size)) {
      sizeClasses = `${name}--size-${props.size}`;
    } else if (props.size) {
      sizeStyles = {
        width: convertToUnit(props.size),
        height: convertToUnit(props.size)
      };
    }
    return {
      sizeClasses,
      sizeStyles
    };
  });
}

export {
  makeSizeProps,
  useSize
};
//# sourceMappingURL=chunk-QM6MPTMC.js.map
